{"version":3,"sources":["node_modules/browser-pack/_prelude.js","javascripts/Bread.js","javascripts/Cheese.js","javascripts/Condiments.js","javascripts/DOMHandler.js","javascripts/Meat.js","javascripts/SandwichMaker.js","javascripts/Veggies.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\n// This SandwichMaker IIFE augments the original one\nvar SandwichMaker = (function(maker) {\n\n  // Private variable to store the different meat prices\n  var breadPrices = {\n  \tWhite: 0.65, \n  \tWheat: 0.65,\n  \tRye: 0.85\n  };\n\n  // Augment the original object with another method\n  maker.addBread = function(ingredient) {\n    return breadPrices[ingredient];\n  };\n\n  // Return the new, augmented object with the new method on it\n  return maker;\n})(SandwichMaker);\n","\"use strict\";\n\n// This SandwichMaker IIFE augments the original one\nvar SandwichMaker = (function(maker) {\n\n  // Private variable to store the different meat prices\n  var cheesePrices = {\n  \tSwiss: 0.50, \n  \tCheddar: 0.40,\n  \tProvolone: 0.60\n  };\n\n  // Augment the original object with another method\n  maker.addCheese = function(ingredient) {\n    return cheesePrices[ingredient];\n  };\n\n  // Return the new, augmented object with the new method on it\n  return maker;\n})(SandwichMaker);\n","\"use strict\";\n\n// This SandwichMaker IIFE augments the original one\nvar SandwichMaker = (function(maker) {\n\n  // Private variable to store the different meat prices\n  var condimentPrices = {\n  \tMustard: 0.09, \n  \tMayo: 0.12,\n  \tKetchup: 0.15\n  };\n\n  // Augment the original object with another method\n  maker.addCondiment = function(ingredient) {\n    return condimentPrices[ingredient];\n  };\n\n  // Return the new, augmented object with the new method on it\n  return maker;\n})(SandwichMaker);\n","\"use strict\";\n\nlet MakerModule = require(\"./SandwichMaker\");\nlet BreadModule = require(\"./Bread\");\nlet MeatModule = require(\"./Meat\");\nlet VeggieModule = require(\"./Veggies\");\nlet CheeseModule = require(\"./Cheese\");\nlet CondimentModule = require(\"./Condiments\");\n\n// Variable to hold the final price. Default to 0.\nvar finalSandwichPrice = 0;\n\nvar finalSandwichEl = document.getElementById(\"finalSandwich\"); //PH\nvar finalPriceElContainer = document.getElementById(\"finalPrice\"); //PH\nvar finalPriceEl = finalPriceElContainer.getElementsByTagName(\"p\")[1]; //PH\n\n// Variable to hold topping that the user selects\nvar selectedTopping;\n\n// Get a reference to the <select> element that has all the meat options\nvar meatChooser = document.getElementById(\"meat-chooser\");\nvar veggieChooser = document.getElementById(\"veggie-chooser\");\nvar cheeseChooser = document.getElementById(\"cheese-chooser\");\nvar condimentChooser = document.getElementById(\"condiment-chooser\");\nvar breadChooser = document.getElementById(\"bread-chooser\");\n\n/* \n  A <select> element broadcasts a change event, so you listen for it\n  and get the value of the topping from your augmented IIFE\n*/\nmeatChooser.addEventListener(\"change\", function(event) {\n  \n  // Get the value chosen from the DOM\n  selectedTopping = event.target.value;\n\n\t if (selectedTopping !== 'None') {\n\t  // Determine the price of the topping chosen\n\t  var meatPrice = SandwichMaker.addMeat(selectedTopping);\n\n\t  // Add the topping to the SandwichMaker to increase the total price\n\t  SandwichMaker.addTopping(meatPrice);\n\n\t  finalSandwichEl.innerHTML += `<p>$${meatPrice.toFixed(2)} ${selectedTopping} </p>`;\n\t  finalPriceEl.innerHTML = `<p>$${SandwichMaker.getTotal().toFixed(2)}</p>`;\n\t};\n});\n\n// Veggies\nveggieChooser.addEventListener(\"change\", function(event) {\n  selectedTopping = event.target.value;\n\t if (selectedTopping !== 'None') {\n\t  var veggiePrice = SandwichMaker.addVeggie(selectedTopping);\n\t  SandwichMaker.addTopping(veggiePrice);\n\t  finalSandwichEl.innerHTML += `<p>$${veggiePrice.toFixed(2)} ${selectedTopping} </p>`;\n\t  finalPriceEl.innerHTML = `<p>$${SandwichMaker.getTotal().toFixed(2)}</p>`;\n\t};\n});\n\n// Cheeses\ncheeseChooser.addEventListener(\"change\", function(event) {\n  selectedTopping = event.target.value;\n\t if (selectedTopping !== 'None') {\n\t  var cheesePrice = SandwichMaker.addCheese(selectedTopping);\n\t  SandwichMaker.addTopping(cheesePrice);\n\t  finalSandwichEl.innerHTML += `<p>$${cheesePrice.toFixed(2)} ${selectedTopping} </p>`;\n\t  finalPriceEl.innerHTML = `<p>$${SandwichMaker.getTotal().toFixed(2)}</p>`;\n\t};\n});\n\n// Condiments\ncondimentChooser.addEventListener(\"change\", function(event) {\n  selectedTopping = event.target.value;\n\t if (selectedTopping !== 'None') {\n\t  var condimentPrice = SandwichMaker.addCondiment(selectedTopping);\n\t  SandwichMaker.addTopping(condimentPrice);\n\t  finalSandwichEl.innerHTML += `<p>$${condimentPrice.toFixed(2)} ${selectedTopping} </p>`;\n\t  finalPriceEl.innerHTML = `<p>$${SandwichMaker.getTotal().toFixed(2)}</p>`;\n\t};\n});\n\n// Breads\nbreadChooser.addEventListener(\"change\", function(event) {\n  selectedTopping = event.target.value;\n\t if (selectedTopping !== 'None') {\n\t  var breadPrice = SandwichMaker.addBread(selectedTopping);\n\t  SandwichMaker.addTopping(breadPrice);\n\t  finalSandwichEl.innerHTML += `<p>$${breadPrice.toFixed(2)} ${selectedTopping} </p>`;\n\t  finalPriceEl.innerHTML = `<p>$${SandwichMaker.getTotal().toFixed(2)}</p>`;\n\t};\n});\n\n\n\n\n\n\n\n\n\n\n\n\n","\"use strict\";\n\n// This SandwichMaker IIFE augments the original one\nvar SandwichMaker = (function(maker) {\n\n  // Private variable to store the different meat prices\n  var meatPrices = {\n  \tTurkey: 0.90, \n  \tBeef: 1.10,\n  \tChicken: 1.00\n  };\n\n  // Augment the original object with another method\n  maker.addMeat = function(ingredient) {\n    return meatPrices[ingredient];\n  };\n\n  // Return the new, augmented object with the new method on it\n  return maker;\n})(SandwichMaker);\n","\"use strict\";\n\nvar SandwichMaker = (function() {\n\n  // Private variable to store the price\n  var totalPrice = 0;\n\n  // Return the public interface that other code can interact with\n  return {\n    addTopping: function(toppingPrice) {\n      totalPrice += toppingPrice;\n    },\n    getTotal: function() {\n    \treturn totalPrice;\n    }\n  };\n})();\n","\"use strict\";\n\n// This SandwichMaker IIFE augments the original one\nvar SandwichMaker = (function(maker) {\n\n  // Private variable to store the different meat prices\n  var veggiePrices = {\n  \tTomato: 0.50, \n  \tOnion: 0.40,\n  \tPickles: 0.20\n  };\n\n  // Augment the original object with another method\n  maker.addVeggie = function(ingredient) {\n    return veggiePrices[ingredient];\n  };\n\n  // Return the new, augmented object with the new method on it\n  return maker;\n})(SandwichMaker);\n"]}